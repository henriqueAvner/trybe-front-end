Códigos Assíncronos:

-> São códigos que executam fora da ordem de execução do código completo, de forma a não parar a execução completa, e, chamando o código assincrono, ele executará em paralelo ao código principal, e retornará ao final de sua execução.

estrutura:

declaro uma função (normalmente chamada setTimeout, e passo 2 parametros: uma função novamente, e o tempo que eu quero que esse código seja executado, no caso, em milissegundos):


setTimeout(() => {}, 1000);

FETCH():

-> Sempre retornará uma PROMISSE;

-> o .json também retorna uma PROMISSE;

-> o retorno da função assíncrona é uma PROMISSE;

promise.all -> recebe um array de promisses e serve para executar a promisse em todos;


 